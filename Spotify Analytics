-- For this project, I downloaded Spotify data from Kaggle. (https://www.kaggle.com/datasets/equinxx/spotify-top-50-songs-in-2021?select=spotify_top50_2021.csv)
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL.

-- Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

-- Then I inserted the Spotify Data .csv into the table.
-- Next, I explored the data using the following SQL.

-- Who are the top 10 songs based on popularity
SELECT track_name, artist_name, popularity
FROM Spotifydata
ORDER BY popularity desc
LIMIT 10;

-- Which songs are the most danceable
SELECT track_name, artist_name, danceability
FROM Spotifydata
ORDER BY danceability desc;

-- Which songs have a duration over 200,000 and an energy score over 0.5 sorted by popularity
SELECT track_name, artist_name, popularity, duration_ms, energy
FROM Spotifydata
WHERE duration_ms > 200000
AND energy > 0.5
ORDER BY popularity desc;

-- Calculate the average popularity for the artists in the Spotify data table.
-- For every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH popularity_average_CTE AS (
    SELECT s.artist_name, AVG(s.popularity) AS average_popularity
    FROM Spotifydata s
    GROUP BY s.artist_name
)
SELECT artist_name, average_popularity, 'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity >= 90
ORDER BY average_popularity desc;
